{"ast":null,"code":"const API_BASE = \"http://localhost:8080/api\"; // your Spring Boot backend URL\n\nexport async function getWallet() {\n  const res = await fetch(`${API_BASE}/wallet`, {\n    headers: {\n      \"X-USER-ID\": \"0001\"\n    }\n  });\n  return res.json();\n}\nexport async function getLatestPrices() {\n  const res = await fetch(`${API_BASE}/prices`);\n  if (!res.ok) return [];\n  return res.json();\n}\nexport async function getTrades() {\n  const res = await fetch(`${API_BASE}/tradeHistory`, {\n    headers: {\n      \"X-USER-ID\": \"0001\"\n    }\n  });\n  return res.json();\n}\nexport async function trade(pair, side, amountCrypto) {\n  const res = await fetch(`${API_BASE}/trade`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"X-USER-ID\": \"0001\"\n    },\n    body: JSON.stringify({\n      pair,\n      side,\n      amountCrypto\n    })\n  });\n  if (!res.ok) {\n    const msg = await res.text();\n    throw new Error(\"Trade failed: \" + msg);\n  }\n  return res.json();\n}","map":{"version":3,"names":["API_BASE","getWallet","res","fetch","headers","json","getLatestPrices","ok","getTrades","trade","pair","side","amountCrypto","method","body","JSON","stringify","msg","text","Error"],"sources":["C:/Users/Jun Qiang/Downloads/trade-Backend/cyrptoTradingSystem/frontend/src/api.js"],"sourcesContent":["const API_BASE = \"http://localhost:8080/api\"; // your Spring Boot backend URL\r\n\r\nexport async function getWallet() {\r\n  const res = await fetch(`${API_BASE}/wallet`, {\r\n    headers: { \"X-USER-ID\": \"0001\" },\r\n  });\r\n  return res.json();\r\n}\r\n\r\nexport async function getLatestPrices() {\r\n  const res = await fetch(`${API_BASE}/prices`);\r\n  if (!res.ok) return [];\r\n  return res.json();\r\n}\r\n\r\nexport async function getTrades() {\r\n  const res = await fetch(`${API_BASE}/tradeHistory`, {\r\n    headers: { \"X-USER-ID\": \"0001\" },\r\n  });\r\n  return res.json();\r\n}\r\n\r\nexport async function trade(pair, side, amountCrypto) {\r\n  const res = await fetch(`${API_BASE}/trade`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-USER-ID\": \"0001\",\r\n    },\r\n    body: JSON.stringify({\r\n      pair,\r\n      side,\r\n      amountCrypto,\r\n    }),\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const msg = await res.text();\r\n    throw new Error(\"Trade failed: \" + msg);\r\n  }\r\n\r\n  return res.json();\r\n}\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,2BAA2B,CAAC,CAAC;;AAE9C,OAAO,eAAeC,SAASA,CAAA,EAAG;EAChC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,SAAS,EAAE;IAC5CI,OAAO,EAAE;MAAE,WAAW,EAAE;IAAO;EACjC,CAAC,CAAC;EACF,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeC,eAAeA,CAAA,EAAG;EACtC,MAAMJ,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,SAAS,CAAC;EAC7C,IAAI,CAACE,GAAG,CAACK,EAAE,EAAE,OAAO,EAAE;EACtB,OAAOL,GAAG,CAACG,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeG,SAASA,CAAA,EAAG;EAChC,MAAMN,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,eAAe,EAAE;IAClDI,OAAO,EAAE;MAAE,WAAW,EAAE;IAAO;EACjC,CAAC,CAAC;EACF,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeI,KAAKA,CAACC,IAAI,EAAEC,IAAI,EAAEC,YAAY,EAAE;EACpD,MAAMV,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,QAAQ,EAAE;IAC3Ca,MAAM,EAAE,MAAM;IACdT,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,WAAW,EAAE;IACf,CAAC;IACDU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBN,IAAI;MACJC,IAAI;MACJC;IACF,CAAC;EACH,CAAC,CAAC;EAEF,IAAI,CAACV,GAAG,CAACK,EAAE,EAAE;IACX,MAAMU,GAAG,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,CAAC;IAC5B,MAAM,IAAIC,KAAK,CAAC,gBAAgB,GAAGF,GAAG,CAAC;EACzC;EAEA,OAAOf,GAAG,CAACG,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}